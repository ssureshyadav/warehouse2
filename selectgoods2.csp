<html XMLNS:SKLADz XMLNS:SKLADList XMLNS:SKLAD2>
<IMPORT NAMESPACE="SKLADList" IMPLEMENTATION="htc/listview2.htc">
<IMPORT NAMESPACE="SKLADz" IMPLEMENTATION="htc/treeview.htc">
<IMPORT NAMESPACE="SKLAD2" IMPLEMENTATION="htc/table.htc">

<head>
<title>#($G(%session.Data("systemname")))#</title>
<link href="style.css" type=text/css rel=stylesheet>
<script language="Jscript" src="common.js"></script>
<script language="JScript">
Arguments=window.dialogArguments.split(InnerSplitter);
CardId=Arguments[0];
var CurrentProperty;
var Objvalue;
var InCard=false;
var FromTable="";
var FromTree="";
var Number=0;
ExpressType2="";
var ColCode="";
//если указано "@1" то в качестве цены будет указана закупочная цена
//см. Goods.GoodsAction.fromgroup()
var ShowBuyPrices="#(%request.Get("ShowBuyPrices"))#";
var depot="#($G(%session.Data("depot")))#"
var commongroups="#($G(%session.Data("commongroups")))#"
var OnlyID="#(%request.Get("OnlyID"))#";

function startFun()
{
	if(!TurnOnGoodsForDoc_checkbox.checked)
	{
		ResultArray=TempGoods.ListViewGetItems("selected",OnlyID);
	}
	else
	{
		ResultArray=GoodsForDoc.ListViewGetItems("",OnlyID);
	}
	returnValue=ResultArray;
	window.close();
}

function ReturnSelected(){
ResultArray=TempGoods.ListViewGetItems("selected");
returnValue=ResultArray;
window.close();	
}

function load(){
window.dialogWidth=screen.availWidth+"px";
//alert(screen.availWidth+"X"+screen.availHeight+"\n"+window.dialogWidth+"X"+window.dialogHeight)
TempGoods.attachEvent("onAddColumns", addcol)
TempGoods.LoadHeaders("izdelie,Description,Composition");
GoodsForDoc.LoadHeaders("izdelie,Description,Composition");
//alert("depot\n"+depot+"commongroups\n"+commongroups);
//Catalogues.startDownload(strForGroups(depot,commongroups), putCatalogue);
LoadTree()
PropTable.DownLoadPairs("","");
LoadPropTree();
}

function addcol(){
TempGoods.detachEvent("onAddColumns", addcol)
fields=TempGoods.GetColumns("Goods->");
//TempGoods.AddColumns("quant~Количество~~~@%String#@#")
}

function putCatalogue(text){
addOptions(text,"Catalogues");
LoadTree();
}

function LoadTree(){
GroupsTree.AdditionalID=Catalogues.value;
//alert('Data.csp?class=Goods.Group&fields=Parent,Code,Name,ID&params="'+depot+'","'+Catalogues.value+'"')
GroupsTree.DownLoad('Data.csp?class=Goods.Group&fields=Parent,Code,Name,ID&params="'+depot+'","'+Catalogues.value+'"')	
}

function LoadPropTree(){
Group=ReturnSpace(GroupsTree.NodeCode);
LoadPropTree2("PropsTree","",Group,Catalogues.value)
}

// добавить товар в таблицу из текущей ветки
function AddFromGroup(){
var where="Groups='"+GroupsTree.NodeID+"'"
if(cbShowQuantity.checked){ShowQuantityVar=1;}
else{ShowQuantityVar=0;}
TempGoods.loadfrommethod("Goods.GoodsAction.fromgroup",where,fields,ShowQuantityVar+ShowBuyPrices)
}

// добавить товар в таблицу из всех подветок данной ветки
function AddFromWholeGroup(){
var where="Groups->Depot='"+depot+"' and Groups->Catalogue='"+Catalogues.value+"' and Groups->Code %STARTSWITH '"+GroupsTree.NodeCode+"'";
TempGoods.loadfrommethod("Goods.GoodsAction.fromgroup",where,fields);
}

function AddFromSelect(){
if(ThisGroupOnly.checked){var GroupCondition="Groups->Depot='"+depot+"' and Groups->Catalogue='"+Catalogues.value+"' and Groups->Code %STARTSWITH '"+GroupsTree.NodeCode+"'";}
else{var GroupCondition="";}
var where=GroupCondition+FromTable;
if(cbShowQuantity.checked){ShowQuantityVar=1;}
else{ShowQuantityVar=0;}
TempGoods.loadfrommethod("Goods.GoodsAction.fromgroup",where,fields,ShowQuantityVar+ShowBuyPrices)
}

function TableClick(){
	ExpressType="FromTable";
	CurrentProperty=PropTable.CurrentRowTag;
	Pname.innerText=PropTable.CurrentRowName;
	newObj=PropTable.CurrentRowElement.cloneNode(true);
	Pvalue.innerHTML="";
	Pvalue.appendChild(newObj);
}

function AddExpress(){
	tagNamez=Pvalue.firstChild.tagName;
	if(tagNamez=="DIV"){
		Objvalue=Pvalue.firstChild.Tag;
		if(Objvalue.split("@")[0]==""){Objvalue=Pvalue.firstChild.innerText+Objvalue;}
		}
	if(tagNamez=="SELECT"){Objvalue=Pvalue.firstChild.options(Objec.selectedIndex).text+"@%String";}
	return Objvalue;
}

function TakeValue(){
FrstPart=AddExpress().split("@")[0]
ScndPart=AddExpress().split("@")[1]
//if(ScndPart!="%Date")return FrstPart
if(ScndPart!="%Date")return "'"+FrstPart+"'"
else {
	dateArr=FrstPart.split("/")
	Data=dateArr[2]+"-"+dateArr[1]+"-"+dateArr[0]
	return "CAST('"+Data+"' AS DATE)"
}
}

function dork(concatenation){
if(Pname.innerText=="")return false
if(ExpressType2!=ExpressType){
	Express.innerHTML="";
	ExpressType2=ExpressType;
	}
newCaption=Pname.innerText;
newEqual=Pequal.options(Pequal.selectedIndex).text;
newValue=TakeVisibleValue();
newExpression=newCaption+newEqual+newValue;
value=TakeValue();
if(ExpressType=="FromTree"){
	//exp=(CurrentProperty+InnerSplitter+Pequal.value+InnerSplitter+value);
	if(FromTree==""){FromTreeconcatenation="";}
	else{FromTreeconcatenation=concatenation}
	Number++;
	field="t"+Number+".Gvalue"
	if((Pequal.value!="=")&(Pequal.value!="<>")){field="CAST(t"+Number+".Gvalue AS INTEGER)"}
	exp=" (t"+Number+".Param="+CurrentProperty+" and "+field+Pequal.value+value+") "
	FromTree=FromTree+FromTreeconcatenation+ exp;
	}
if(ExpressType=="FromTable"){
	if(FromTable==""){FromTableconcatenation="";}
	else{FromTableconcatenation=concatenation}
	exp=" Goods->"+CurrentProperty+Pequal.value+value+" "
	FromTable=FromTable+FromTableconcatenation + exp;
	}
if(Express.innerHTML=="")concatenation="";
if(concatenation=="AND"){concatenation="И"}
if(concatenation=="OR"){concatenation="ИЛИ"}
newString=Express.innerHTML+"<b> "+concatenation+" (</b>"+newExpression+"<b>)</b>"
Express.innerHTML=newString;
}

function TakeVisibleValue(){
	Objec=Pvalue.firstChild;
	if(Objec.tagName=="SELECT")return Objec.options(Objec.selectedIndex).text
	else{return Objec.innerText;}
}

function PropsTreeClick(){
	ExpressType="FromTree";
	CurrentProperty=PropsTree.NodeID;
	Pname.innerText=PropsTree.NodeCaption;
	newObj=CreateDiv("","dsd");
	Pvalue.innerHTML="";
	Pvalue.appendChild(newObj);
}

function DelItems(element){
document.getElementById(element).DelItems();
}

function ClearSelect(){
Express.innerText='';
FromTree="";
FromTable="";
Number=0;
}

function showdictionary(where){
TempGoods.AddOnClear=true;
TempGoods.DownLoad(where);
TempGoods.AddOnClear="false";
}

//функция нужна для совместимости с table.htc
function cellaction(oo){
}

//функция нужна для совместимости с table.htc
function getDivChange(oo){
}

//открыть карточку товара
function OpenCard(){
GoodsId=SelectedItemProperty(GoodsListView,"Tag");
GoodsName=SelectedItemProperty(GoodsListView,'Text');
if(GoodsId=="")return
ok=window.showModalDialog("GoodsCard.csp?GoodsId="+GoodsId+"&groupspath="+GroupsTree.ParentNames,GoodsId+InnerSplitter+GoodsName,"center:yes;status:no;dialogHeight:600px;dialogWidth:650px;resizable:yes")
if(ok==1){ShowTovars()}
}

function GroupsTreeClick(){
	CurrentGroupName.innerText=GroupsTree.NodeCaption;
	LoadPropTree();
	AddFromGroup();
}

// показать/убрать промежуточную таблицу для выбора документов
function TurnOnGoodsForDoc(){
	if(TurnOnGoodsForDoc_checkbox.checked){
		GoodsForDoc_TR.style.display="inline";
		CopyGoodsAnotherTable_Btn.style.display="inline";
		}
	else{
		GoodsForDoc_TR.style.display="none";
		CopyGoodsAnotherTable_Btn.style.display="none";
		}
}

//Переместить
function CopyGoodsAnotherTable_Fn(){
var Strings=TempGoods.ListViewGetItems("selected").split(StringSplitter)
for(var i=0; i<Strings.length-1; i++)
	{
		var StringArray = Strings[i].split(InnerSplitter);
		GoodsForDoc.addrow(StringArray[0],StringArray)
	}
}
</script>
	<script language="cache" runat="server">
		w "<SCRIPT LANGUAGE=""XML"" id=""mySrc1"">"
		w "<offerings>"
		w " <class><materials>This should render.</materials><time>1.5hr</time></class>"
		w "</offerings>"
		w "</"_"script>"
</SCRIPT>
</head>
<body  onload="load();" onkeypress="ManageWindow();">
<table height=100% width=100% border=0>
<tr ><td width=50% valign="top">
<fieldset><legend>Отбор из группы</legend>
Классификатор:<select id="Catalogues" onchange="LoadTree()" >
<script language="cache" runat="server">
w ##class(Docs.Action2).GetClassValuesOptions(,"Goods.Catalogue",,,0)
</script>
</select><br>
  <SKLADz:treeview id="GroupsTree" width="200" height=170 ImagesPath="#(%session.Data("ImagesPath"))#" zonClick="GroupsTreeClick();" onDownloadCmpl="LoadPropTree()" />
  <br>
  <input type="button" id="SelectWholeGroup" value="выбрать всю ветку" onclick="AddFromWholeGroup()">
 </fieldset>
</td>
<td width=50% valign="top">

<fieldset><legend>Отбор по параметрам</legend>
<table><tr><td valign=top>
<SKLAD2:table id="PropTable" width=220 height=200 zonTableClick="TableClick()" DisplaySecondCol="none" />
</td>
<td valign=top>
  <SKLADz:treeview id="PropsTree" width=200 height=130 ShowImages=0 ImagesPath="#(%session.Data("ImagesPath"))#" zonClick="PropsTreeClick()" />
</td></tr>
<tr><td width=100% colspan=2 align=center>
	<span id="Pname"></span>&nbsp;&nbsp;
	<select id="Pequal" >
		<option value="=">=</option>
		<option value="<>">&#8800;</option>
		<option value="<">&lt;</option>
		<option value="<=">&lt;=</option>
		<option value=">">&gt;</option>
		<option value=">=">&gt;=</option>
	</select>&nbsp;&nbsp;
	<span id="Pvalue" style="background:#ddffff;width:150px;border:dotted 1 gray">&nbsp;&nbsp;&nbsp;</span></td>
</tr>
<tr><td colspan=2>
	<center>
	<input type="button" value="И" id="Pand" onclick="dork('AND')" style="width:50px">
	<input type="button" value="ИЛИ" id="Por" onclick="dork('OR')" style="width:50px"><sklad:LittleButton name="del" id="Clear" onclick="ClearSelect();" alt="Очистить поле 'Параметры'"></center>
<fieldset><legend>Параметры отбора</legend>
&nbsp;<span id="Express" style="font:Arial 13;color:#000033"></span>
</fieldset>
</td></tr>
<tr><td colspan=2 align="center">
		<input type="button" onclick="AddFromSelect()" value="Выбрать товары">
		<input type="checkbox" id="ThisGroupOnly" style="border:0;width:20px"> только в группе <span id="CurrentGroupName"></span>
	</td>
	</tr>
</table>
</fieldset>
</td>
</tr>
<tr><td valign="top"  colspan=2>
<fieldset id="SelectedGoods"><legend>Выбранные товары</legend>
<span title="Вывод остатков слегка тормозит работу. Отключив вывод можно добиться некоторого повышения скорости работы."><input type="checkbox" id="cbShowQuantity" style="width:15px;border:none" checked> Показывать остатки на складах</span>
 	<SKLADList:listview width=100% height=130 id="TempGoods"  ClassName="Goods.Goods" AddOnClear="false" zonDblClick="ReturnSelected();"  AddHeaders="true"/><br>
<sklad:LittleButton name="del" id="addrtrr" onclick="TempGoods.DelItems()" alt="Убрать выделенные товары из списка">
<sklad:LittleButton name="down" id="CopyGoodsAnotherTable_Btn" onclick="CopyGoodsAnotherTable_Fn()" alt="Отобрать товары для документа" style="display:none">
<br>
<span title="Включив промежуточную таблицу, можно набирать в неё товары из нескольких источников а затем все вместе передать в документ."><input type="checkbox" id="TurnOnGoodsForDoc_checkbox" onclick="TurnOnGoodsForDoc()" style="width:15;border:none" > Включить промежуточную таблицу для выбранных товаров</span>
</fieldset>
</td></tr>
<tr id="GoodsForDoc_TR" style="display:none">
	<td colspan=2><SKLADList:listview width=100% height=130 id="GoodsForDoc"  ClassName="Goods.Goods" AddOnClear="false" zonDblClick="ReturnSelected();"  AddHeaders="true"/><br>
<sklad:LittleButton name="del" id="RemoveGoodsForDoc_Button" onclick="GoodsForDoc.DelItems()" alt="Убрать выделенные товары из списка">
</tr>
<tr><td valign=bottom  colspan=2>
<center><sklad:Button value="Да" onclick="startFun();"><sklad:Button onclick="window.close()" value="Отмена"></center>
</td></tr>
</table>
</body>
</html>
