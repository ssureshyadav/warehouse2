<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="20">
<Class name="csp.receiverequesttest">
<ClassType/>
<Hidden>1</Hidden>
<Import>User</Import>
<Language>cache</Language>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>62188,58678.676415</TimeCreated>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do ..OnPageCSPROOT()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPageCSPROOT">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	n Passw,Code,Data,KontrId,RequestObj,FirstLine,ItemObj,i,error,rus,serial,garant
	//Code - Код сервисного ценра
	//Passw - пароль сервисного центра
	//Data - файл заявки Request[...].req
	//Первая строка файла: Номер_$C(9)_(0:Платно;1:По гарантии)_$C(9)_Комментарий
	//Последующие строки:	ID@Goods.Goods_$C(9)_Количество_$C(9)_Гарантийный талон_$C(9)_серийный номер_$C(9)_Продавец_$C(9)_Описание поломки_$C(9)_Дата продажи_$C(9)_Комментарий к строке
	s Passw=%request.Get("Pwd")
	if Passw="" w "Невозможно зарегистрировать заявку."_$C(13,10)_"Не указан пароль." q 1
	s Code=%request.Get("Code")
	s Data=%request.Get("Data")
	s ^Requests($I(^Requests),$zdt($H,4))="Код центра "_Code_"   REMOTE_ADDR="_%request.CgiEnvs("REMOTE_ADDR")_" CurrentVersion=? ""Заявка на запчасти"""
	if ##class(Common.Common).GetPasswordFromCode(Code, .KontrId)'=Passw d  q 1
	. w "Невозможно зарегистрировать заявку."_$C(13,10)
	. w "В базе данных не существует клиент с кодом "_Code_" и паролем "_Passw_$C(13,10)
	. w "Уточните ваши персональные данные и внесите их в параметры программы."
	s dir="c:\Requests"
	s rus="АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬабвгдеёжзийклмнопрстуфхцчшщъыьэюя"
	s AllowedSymbols="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	s error=""
	if '##class(%File).DirectoryExists(dir) d ##class(%File).CreateDirectory(dir)
	s FirstLine=$P(Data,$C(13,10),1)
	s Name=$P(FirstLine,$C(9),1)
	s filename=dir_"\"_Code_"_"_Name_".req"
	s fileobj = ##class(%File).%New(filename)
	Do fileobj.Open("WSN")
	Do fileobj.WriteLine(FirstLine)
	s RequestObj=##class(Operation.Instructions).%New()
	d RequestObj.KontrSetObjectId(KontrId)
	s RequestObj.InstDate=+$H
	d RequestObj.OperSetObjectId(10)
	s RequestObj.Comment=$P(FirstLine,$C(9),3)
	s RequestObj.Name=Name
	s RashOplatType=$P(FirstLine,$C(9),2)+1
	d RequestObj.RashOplatTypeSetObjectId(RashOplatType)
	f i=2:1:$L(Data,$C(13,10)) d  q:error'=""
	. s CurrentFileString=$P(Data,$C(13,10),i)
	. Do fileobj.WriteLine(CurrentFileString)
	. s garant = $P(CurrentFileString,$C(9),3)
	. s serial = $P(CurrentFileString,$C(9),4)
	. s quantity = +$TR($P(CurrentFileString,$C(9),2)," ","")
	. if (RashOplatType=1)&&(quantity>1) s error=error_" в строке (серийный н. "_serial_", гарантийный н. "_garant_") указано более 1 штуки, что недопустимо."_$C(13,10)
	. q:CurrentFileString=""
	. //проверка на соответствие серийного номера
	. for zz=1:1:$L(serial) d
	. . if AllowedSymbols'[$E(serial,zz) s error=error_" в серийном номере "_serial_" есть недопустимый символ "_"'"_$E(serial,zz)_"'"_$C(10,13)
	. //проверка на соответствие гаранийного номера
	. for zz=1:1:$L(garant) d
	. . if AllowedSymbols'[$E(garant,zz) s error=error_" в номере гарантийного талона "_garant_" есть недопустимый символ "_"'"_$E(garant,zz)_"'"_$C(10,13)
	. //это была проверка на наличие кирилицы в серийном или гарантийном
	. //for zz=1:1:$L(rus) d
	. //. if serial[$E(rus,zz) s error=error_" в серийном номере "_serial_" есть русская буква "_$E(rus,zz)
	. //. if garant[$E(rus,zz) s error=error_" в гарантийном номере "_garant_" есть русская буква "_$E(rus,zz)
	. s GoodsId = $P(CurrentFileString,$C(9),1)
	. &sql(Select ID from Goods.Goods where ID=:GoodsId)
	. if SQLCODE = 100 d  q
	. . s error= error_" Так как в заявке обнаружен неизвестный код товара/запчасти "_GoodsId
	. s ItemObj=##class(Operation.InstructionsItems).%New()
	. d ItemObj.DocTypeSetObjectId("Operation.Instructions")
	. d ItemObj.GoodsSetObjectId(GoodsId)
	. s price = ##class(Goods.Goods).GetPropertyValue(GoodsId,"Price")
	. s ItemObj.Price = +$TR(price," ","")
	. s ItemObj.Quantity=quantity
	. s ItemObj.garant=garant
	. s ItemObj.sn=serial
	. s ItemObj.seller=$P(CurrentFileString,$C(9),5)
	. s SellDate=$P(CurrentFileString,$C(9),7)
	. //если дата продажи подходит под шаблон 12.12.2002 то преобразуем в HOROLOG и пишем в базу
	. if SellDate?1.2N1"."1.2N1"."4N s ItemObj.SellDate=$ZDH($TR(SellDate,".","/"),4)
	. s ItemObj.opispolomki=$P(CurrentFileString,$C(9),6)
	. s ItemObj.BrakComment=$P(CurrentFileString,$C(9),8)
	. d RequestObj.Items.Insert(ItemObj)
	if error'="" w "Невозможно зарегистрировать заявку."_$C(13,10)_error q 1
	do fileobj.%Save()
	s ok=RequestObj.%Save()
	if ok w "Заявка успешно зарегистрирована"_$C(9)_RequestObj.%Id()_$C(9)_RequestObj.StateLogicalToDisplay(RequestObj.State)
	e  d
	. JOB saveobjerror^saveerror(ok,$ZNAME_" Code="_Code)
	. w "Невозможно зарегистрировать заявку."_$C(13,10)_"Внутренняя ошибка сервера."_$C(13,10)_"Ошибка зарегистрирована, мы сообщим Вам как только решим проблему."_$C(13,10)_"Спасибо за понимание."
	q 1
]]></Implementation>
</Method>

<Parameter name="CSPFILE">
<Default>c:\cachesys\csp\sklad2\ReceiveRequestTest.csp</Default>
</Parameter>

<Parameter name="CSPURL">
<Default>/csp/sklad2/ReceiveRequestTest.csp</Default>
</Parameter>

<Parameter name="FileTimestamp">
<Default>62188,58679</Default>
</Parameter>
</Class>
</Export>
