<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="20">
<Class name="csp.report13">
<ClassType/>
<Hidden>1</Hidden>
<Import>User</Import>
<IncludeCode>xmlmacros</IncludeCode>
<Language>cache</Language>
<ProcedureBlock>0</ProcedureBlock>
<Super>%CSP.Page</Super>
<TimeCreated>62194,39408.575821</TimeCreated>

<Method name="GetRequestNumber">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec>ID,OplatStatusName,Summa</FormalSpec>
<Language>cache</Language>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  n RashID,OplatStatus,SummaFromDoc,SQLCODE,StoreOutID,Name
  s (OplatStatusName,Summa)=""
  &sql(select ID,OplatStatus,Summa,Name into :RashID,:OplatStatus,:SummaFromDoc,:RashName from Docs.Rash where source = :ID)
  if SQLCODE = 100 q ""
  s OplatStatusName = ##class(Docs.Rash).OplatStatusLogicalToDisplay(OplatStatus)
  &sql(select ID,Name into :StoreOutID,:Name from Docs.StorageOut where source = :RashID)
  if SQLCODE = 100 q ""
  s ok= ##class(Docs.Action2).GetSummsByBrands(StoreOutID,.Summa)
  s Summa=$G(Summa)
  if SummaFromDoc'=Summa q Name_" Ошибка. Сумма расходной накладной "_RashName_" ("_SummaFromDoc_") не равна сумме строк инструкции по отбору ("_Summa_")."
  q Name
 
]]></Implementation>
</Method>

<Method name="OnPage">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Do ..OnPageCSPROOT()
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPageBODY">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<body>"
	Write !,"<center><h3>Заявки </h3></center>",!
	Write "<table border=1>",!
	s SignCode(-1)="&#9650;"
	s SignCode(1)="&#9660;"
	s (NumberSign,DatSign,KontrSign,NameSign,StateSign,CommentSign,GarantSign,SummSign,PostNumberSign)=""
	w "<tr>"
	w "<td><b>№ п/п</b> "_NumberSign
	w "<td><b>Дата</b> "_DatSign
	w "<td><b>Контрагент</b> "_KontrSign
	w "<td><b>Номер заявки</b> "_NameSign
	w "<td><b>Состояние</b> "_StateSign
	w "<td><b>Комментарий</b> "_CommentSign
	w "<td><b>Гарантийность</b> "_GarantSign
	w "<td><b>Метод отправки<br>(состояние)</b>"
	w "<td><b>Номер почтового<br>документа</b> "_PostNumberSign
	w "<td><b>Сумма общая</b> "_SummSign
	w "<td><b>Сумма Mastermax</b> "
	w "<td><b>Сумма Tull</b> "
	w "<td><b>Сумма Viconte</b> "
	w "<td><b>Сумма прочих брендов</b> "
	s Dat1=%request.Get("Dat1")
	s Dat2=%request.Get("Dat2")
	if Dat1?1.2N1"/"1.2N1"/"4N s Dat1=$ZDH(Dat1,4)
	e  s Dat1=+$H
	if Dat2?1.2N1"/"1.2N1"/"4N s Dat2=$ZDH(Dat2,4)
	e  s Dat2=+$H 
	s showdate=$S(%request.Get("showdate")="false":0,1:1)
	s MM=$$$TunesVariableGlobal("MM")	//список аббревиатур мастермакс через запятую
	s VC=$$$TunesVariableGlobal("VC")
	s TL=$$$TunesVariableGlobal("TL")
	s innerkurs=+$$$TunesVariableGlobal("innerkurs")
	//списки которые через запятую перегоним в массивы, и вырежем пробелы
	f brandname="MM","VC","TL" d
	. f i=1:1:$L(@brandname,",") d
	. . //обрезаем пробелы
	. . s abbr=$TR($P(@brandname,",",i)," ","")
	. . q:abbr=""
	. . s @brandname@(abbr)=""
	s glob=$NA(^mtempReport($I(^mtempReport)))
	k @glob
	/*
	s SqlRequest = "select ID,RashOplatType,RashOplatType->Name,State,Dat,Comment,Name,Kontr->Name "_
	"from Operation.Instructions"_
	"where Dat>=? and Dat<=? and Oper=10"
	s rs = ##class(%ResultSet).%New()
	s ok = rs.Prepare(SqlRequest)
	if '+ok w "<tr><td colspan=10></td></tr>"
	s ok = rs.Execute(Dat1,Dat2)
	while rs.Next() 
	{
	s ID=rs.Data("ID")
	s @glob@("Data",ID,"Dat")=rs.Data("Dat")
	s @glob@("Data",ID,"Kontr")=rs.Data("Kontr")
	s @glob@("Data",ID,"Comment")=rs.Data("Comment")
	s @glob@("Data",ID,"Name")=rs.Data("Name")
	s @glob@("Data",ID,"RashOplatTypeName")=rs.Data("RashOplatTypeName")
	s @glob@("Data",ID,"RashOplatType")=rs.Data("RashOplatType")
	s @glob@("Data",ID,"ID")=rs.Data("ID")
	}
	*/
	&sql(
	declare zz cursor for
	select ID,RashOplatType,RashOplatType->Name,State,Dat,Comment,Name,Kontr->Name,postnumber,postdata
	into :ID,:RashOplatType,:RashOplatTypeName,:State,:Dat,:Comment,:Name,:Kontr,:postnumber,:postdata
	from Operation.Instructions
	where Dat>=:Dat1 and Dat<=:Dat2 and Oper=10
	)
	&sql(open zz)
	f  &sql(fetch zz) q:SQLCODE  d
	. &sql(select State,StateChangeD,StateChangeT into :RealState,:StateChangeD,:StateChangeT  from Operation.InstructionsHist where instr=:ID and state in (5,6,7,8,8.7,8.9) order by StateChangeD desc, StateChangeT desc)
	. if SQLCODE s (RealState,StateChangeD,StateChangeT)=""
	. s @glob@("Data",ID,"Dat")=Dat
	. s @glob@("Data",ID,"Kontr")=Kontr
	. s @glob@("Data",ID,"Comment")=Comment
	. s @glob@("Data",ID,"Name")=Name
	. s @glob@("Data",ID,"RashOplatTypeName")=RashOplatTypeName
	. s @glob@("Data",ID,"RashOplatType")=RashOplatType
	. s @glob@("Data",ID,"postnumber")=postnumber
	. s @glob@("Data",ID,"postdata")=postdata
	. s @glob@("Data",ID,"State")=State
	. s @glob@("Data",ID,"ID")=ID
	. s @glob@("Data",ID,"RealState")=RealState
	. s @glob@("Data",ID,"StateChangeD")=StateChangeD
	. s @glob@("Data",ID,"StateChangeT")=StateChangeT
	&sql(close zz)
	s z="" f  s z=$O(@glob@("Data",z)) q:z=""  d
	. f i="Dat","Kontr","Comment","Name","RashOplatTypeName","RashOplatType","ID","State","postnumber","postdata","RealState","StateChangeD","StateChangeT" d
	. . s @i=@glob@("Data",z,i)
	. if postdata s postdata=$ZD(postdata,4)
	. if StateChangeD s StateChangeD=$ZD(StateChangeD,4)
	. if StateChangeT s StateChangeT=$ZT(StateChangeT)
	. if RealState s RealState=##class(Operation.Instructions).StateLogicalToDisplay(RealState)
	. w "<tr>"
	. w "<td>&nbsp;"_$I(count)
	. w "<td>&nbsp;"_$ZD(Dat,4)
	. w "<td>&nbsp;"_Kontr
	. w "<td>&nbsp;"_..GetRequestNumber(ID,.OplatStatusName,.Summa)
	. w "<td>&nbsp;"_##class(Operation.Instructions).StateLogicalToDisplay(State)
	. w "<td> ("_Name_") "_Comment
	. w "<td>&nbsp;"_RashOplatTypeName
	. if RashOplatType=2 w " ("_OplatStatusName_")"
	. w "<td>&nbsp;"
	. w:RealState'="" RealState_" "_"("_StateChangeD_" "_StateChangeT_")"
	. w "<td>&nbsp;"	//номер почтового документа
	. w:postnumber'="" "№"_postnumber_" ("_postdata_")"
	. w "<td>&nbsp;"_Summa		//общая сумма документа
	. w "<td>&nbsp;"_$G(Summa("MM"))
	. w "<td>&nbsp;"_$G(Summa("TL"))
	. w "<td>&nbsp;"_$G(Summa("VC"))
	. w "<td title="""_$G(Summa("undefined","names"))_""">&nbsp;"_$G(Summa("undefined"))
	. w "</tr>"
	k @glob
	Write !,"</table>",!
	Write "</body>"
]]></Implementation>
</Method>

<Method name="OnPageCSPROOT">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write !,!,!,!,!
	Do ..OnPageHTML()
]]></Implementation>
</Method>

<Method name="OnPageHEAD">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<head>"
	Write !,"<meta http-equiv=""Content-Type"" content=""charset=windows-1251"">"
	Write !,"<!-- Put your page Title here -->"
	Write !,"<title>	Отчёт по количеству заявок </title>",!
	Write !,"</head>"
]]></Implementation>
</Method>

<Method name="OnPageHTML">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	Write "<html>"
	Write !
	Do ..OnPageHEAD()
	Write !,!
	Do ..OnPageBODY()
	Write !,"</html>"
]]></Implementation>
</Method>

<Method name="OnPreHTTP">
<ClassMethod>1</ClassMethod>
<CodeMode>code</CodeMode>
<FormalSpec/>
<Language>cache</Language>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
  d:%session.NewSession 
  . s %session.EndSession=1
  . s ses=%request.Get("sessionid",1)
  . s %session=%session.GetSession(ses)
  
  s ContentType=%request.Get("ContentType")
  set %response.ContentType = ContentType
  if ContentType="application/x-msexcel" do %response.SetHeader("Content-Disposition","attachment;excel.xls")
  set %response.Expires = "Thu, 01 Apr 2003 00:00:00 GMT"
  Quit 1
 
]]></Implementation>
</Method>

<Parameter name="CHARSET">
<Default>windows-1251</Default>
</Parameter>

<Parameter name="CONTENTTYPE">
<Default>charset=windows-1251</Default>
</Parameter>

<Parameter name="CSPFILE">
<Default>c:\cachesys\csp\sklad2\Report13.csp</Default>
</Parameter>

<Parameter name="CSPURL">
<Default>/csp/sklad2/Report13.csp</Default>
</Parameter>

<Parameter name="FileTimestamp">
<Default>61486,66208</Default>
</Parameter>
</Class>
</Export>
