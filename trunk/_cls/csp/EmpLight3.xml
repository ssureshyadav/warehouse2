<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="20">
<Class name="csp.EmpLight3">
<Description>
3 Вариант страницы emplight.csp
параметры тип инструкции и контрагент</Description>
<Super>csp.Base</Super>
<TimeCreated>62305,77157.240215</TimeCreated>

<Parameter name="UseAppSecurity">
<Description>
Использование безопасности приложения
Выполнять ли проверку пользователя</Description>
<Type>%Boolean</Type>
<Default>1</Default>
</Parameter>

<Method name="wTitle">
<Description>
write заголовок страницы</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&args:%String=""]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	w "Рабочее место кладовщика"
	Q ""
]]></Implementation>
</Method>

<Method name="wCss">
<Description>
write заголовок страницы</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&args:%String=""]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	d ##super()
	&html<<link type="text/css" rel="stylesheet" href="css/csp.EmpLight3.css"/>>
	Q ""
]]></Implementation>
</Method>

<Method name="wPageHeader">
<Description>
write заголовок на странице</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&args:%String=""]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	&html<
		<div class="pageLegend">Рабочее место на складе</div>
	>
	Q ""
]]></Implementation>
</Method>

<Method name="wITypeOpts">
<Description>
Вывести типы инструкций в html-options</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	&sql(Declare iotrs Cursor For 
		SELECT id,name Into :id,:name
		From Operation.OperTemplate Order By Name
	) &sql(Open iotrs)
	for { &sql(Fetch iotrs) Q:SQLCODE
		w "<option value='",id,"'>",name,"</option>"		
	} &sql(Close iotrs)
	Q ""
]]></Implementation>
</Method>

<Method name="wIDocs">
<Description><![CDATA[
Выводит документы по инструкциям
<var>where</var> - массив условий вида <example>where(key)="FIELD < ?"</example>
<var>qp</var> - массив соответсвующих условиям параметров вида <example>qp(key)="VALUE"</example>
<var>order</var> - массив правил сортировки вида <example>order(key,FIELD)=direction</example>]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&where:%String="",&qp:%String="",&order:%String=""]]></FormalSpec>
<ReturnType>%ResultSet</ReturnType>
<Implementation><![CDATA[
 s sql="SELECT IID,INAME,IKONTR,IKONTRNAME,IUSERNAME,IDATE"
 	   _",ISTATE,ISTATENAME,IDOSTAVKANAME,ICOLOR,IOPER,IOPERNAME"
 	   _",IPOSTNUM,IPOSTDATE,IROTNAME"
 	   _",DCLASS,DOCID,DNAME"
 	   _" from Operation.IDocView "
 	   _" where (ISTATE Between 2 and 8) "
 #; расписываем where
 s i="" for { s i=$o(where(i)) q:i=""
	s cond=$g(where(i))  continue:cond=""
	s sql=sql_" AND "_cond
 }
 #; расписываем order
 if $d(order)>1 {
	s sql=sql_" ORDER BY " 
	s i="" for { s i=$o(order(i)) q:i=""
		s field=$o(order(i,""))
		s dir=$g(order(i,field))
		s:i>1 sql=sql_","
		s sql=sql_field_$s(dir=-1:" DESC",1:"")
	} 
 } 
 
 
 
 s rs=##class(%ResultSet).%New()
 s ok=rs.Prepare(sql) i '+ok w "Ошибка при формировании списка инструкций" Q ""
 
 #;define debug
 #ifdef debug
 	w "<div style='white-space:pre'>"
 	w !,"SQL:",sql,!
 	zw qp
 	w !,ok
 	w "<div>"
 #endif
 
 #define qp(%i) $g(qp(%i))
 #;в этой версии всего 16 параметров запроса
 s ok=rs.Execute($$$qp(1),$$$qp(2),$$$qp(3),$$$qp(4),$$$qp(5),$$$qp(6),$$$qp(7)
 	,$$$qp(8),$$$qp(9),$$$qp(10),$$$qp(11),$$$qp(12),$$$qp(13),$$$qp(14),$$$qp(15),$$$qp(16)
 ) 
 
 if '+ok w "Ошибка при формировании списка инструкций" Q ""
 
 s odm=$$SetDCFormat^%NLS("DateSeparator",".") ;разделитель в дате 
 
 #define g(%field) s %field=$g(rs.Data("%field"))
 while rs.Next(){
	$$$g(IID) $$$g(INAME) $$$g(IKONTR) $$$g(IKONTRNAME)
	$$$g(IUSERNAME) $$$g(IDATE) $$$g(ISTATE)
	$$$g(ISTATENAME) $$$g(IDOSTAVKANAME) $$$g(ICOLOR)
	$$$g(IOPER) $$$g(IOPERNAME) $$$g(IPOSTNUM)
	$$$g(IPOSTDATE) $$$g(IROTNAME)
	$$$g(DCLASS) $$$g(DOCID) $$$g(DNAME)
	
	s IDATE=$ZD(IDATE,4,,,,,,,"") ;преобразование даты
 	s css="" s:ICOLOR'="" css="style='color:"_ICOLOR_"'"
 	
 	s DCLASS1=$p(DCLASS,",") ;основной класс документа
 	if DCLASS1="Docs.Rash" { 
 		#;подменяем название типа оплаты инструкции
 		#;названием типа оплаты документа
	 	&sql(Select opl->Name INTO :IROTNAME From Docs.Rash Where ID=:DOCID)
	}
 	
 	
 	w "<tr ",css,">"
 	w "<td>",INAME," (",DNAME,") ",IROTNAME,"</td>"
 	w "<td>",IDATE,"</td>"
 	w "<td style='cursor:hand' onclick=""ShowKontr('",IKONTR,"')"">",IKONTRNAME,"</td>"
 	w "<td>",IUSERNAME,"</td>"
 	w "<td id=""Instr",DOCID,"Stat"">",ISTATENAME
 	s:IOPER'=10 IDOSTAVKANAME=IOPERNAME
 	w "<td>",IDOSTAVKANAME,"</td>"
 	w "<td><nobr>"
 	w "<button title='Изменить состояние' onclick='chstat(",IID,",",DOCID,")'><span class='state'/></button>"
 	w "<button title='Распечатать накладную' onclick=""prnt('",DOCID,"@",DCLASS1,"')""><span class='print' /></button>"
 	
 	#;определяем наличие документов третьего уровня от инструкции (дочерние дочерних)
 	&sql(select ID,DocumentClass,Name,stat into :DOC2,:DCLASS2,:DNAME2,:DSTAT2 
 		 From Docs.Super where Source=:DOCID
 	)
 	if SQLCODE {
	 	w "<button title='Создать внутреннюю инструкцию' onclick=""create('",DCLASS,"',",DOCID,")""><span class='new'/></button>"
 	} else {	 
 		w "<button title='Редактировать внутреннюю инструкцию' onclick=""lookinnerinstr('"_DOC2_"@"_DCLASS2_"')""><span class='edit'></button>"
 		w "<button title='Распечатать внутреннюю инструкцию' onclick=""prnt('"_DOC2_"@"_DCLASS2_"')""><span class='print'/></button>"
 		if DSTAT2=1 {
	 		w "<button title='Обработать документ' onclick=""savestore(",DOC2,",'",DNAME2,"')"" ><span class='state'/></button>"
 		} else {
 			w "<button title='Документ уже обработан'><span class='out' /></button>"
 		}
 		
	 }
	w:ISTATE=8 "<button title='Указать реквизиты почтового документа' onclick=""post('",IID,"')""><span class='post'/></button>"
 	w "</nobr></td>"
 	w "</tr>"	
 }
 d rs.Close(), rs.%Close() k rs
 d SetDCFormat^%NLS("DateSeparator",odm) ;восстанавливаем разделитель в дате 
 
 Q $$$OK
]]></Implementation>
</Method>

<Method name="wBody">
<Description>
write содержимое страницы</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&args:%String=""]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 &html<
  <table><tr><td>
 	<img title="Обновить раздел [ F5 ]" 
		onclick="window.location.reload()"
		src="images/refresh.gif" 
	/></td>
	<td>
	<button onclick="window.location='BrakUtiliz.csp'"
	 style="padding:3px;" 
	>
		Списание брака
	</button> 
	</td>
 </tr></table>
 
 <fieldset id="fsInstr"><legend>Инструкции</legend>

 
<p style="margin:5px 0px;"><label for='ChooseInstrType'>Тип инструкции:</label> 
	<select id="ChooseInstrType" onchange="ReloadWithParams()">
	<option value="">Все</option>>
		d ..wITypeOpts()
	&html<</select>
	<label for='ChooseKontragent'>Контрагент:</label>
	<select id="ChooseKontragent" onchange="ChooseKontragentFunc()">
	<option value="">Все</option>
	<option value="choose">Выбрать контрагента...</option>
	</select>
	</p>
<table id="TIH">>
	#; выводим шапку таблицы с текущим режимом сортировки
	s SignCode(-1)="&#9650;", SignCode(1)="&#9660;" ;символы направления сортировки
	#; режим сортировки 
	s sort=$g(%request.Data("sort",1)) s:sort="" sort="DNAME" ;по умолчанию сортировка по номеру связанного с инструкцией документа
	s dir=$g(%request.Data("dir",1)) s:dir="" dir=1 ;направление сортировки
	#; закладываем следующие режимы сортировки
    if sort="DNAME" s NumberOrder=dir*-1,NumberSign=SignCode(dir)
	if sort="IDATE" s DateOrder=dir*-1,DateSign=SignCode(dir)
	if sort="IKONTRNAME" s KontrOrder=dir*-1,KontrSign=SignCode(dir)
	if sort="IUSERNAME" s OperOrder=dir*-1,OperSign=SignCode(dir)
	if sort="ISTATE" s StateOrder=dir*-1,StateSign=SignCode(dir)
	if sort="IDOSTAVKA" s TaskOrder=dir*-1,TaskSign=SignCode(dir)
    f i=1:1:7 w "<col class='c",i,"'/>"
	w "<thead><tr>"
	w "<th><a href='?sort=DNAME&dir=",$g(NumberOrder,1),"'>Номер ",$g(NumberSign),"</a></th>"
	w "<th><a href='?sort=IDATE&dir=",$g(DateOrder,1),"'>Дата ",$g(DateSign),"</a></th>"
	w "<th><a href='?sort=IKONTRNAME&dir=",$g(KontrOrder,1),"'>Контрагент ",$g(KontrSign),"</a></th>"
	w "<th><a href='?sort=IUSERNAME&dir=",$g(OperOrder,1),"'>Оператор ",$g(OperSign),"</a></th>"
	w "<th><a href='?sort=ISTATE&dir=",$g(StateOrder,1),"'>Состояние ",$g(StateSign),"</a></th>"
	w "<th><a href='?sort=IDOSTAVKA&dir=",$g(TaskOrder,1),"'>Задача<br>(Способ отправки) ",$g(TaskSign),"</a></th>"
	w "<th style='font-weight:normal;font-size:12px;font-family:Arial'>Действия</th>"
	w "</thead></table>"
	&html<<div id="TIBbox"><table id="TIB">>
	f i=1:1:7 w "<col class='c",i,"'/>"
	&html<<tbody>>
	
	s depot=$G(%session.Data("depot"),1) ;по какому складу показывать
	s instr=$G(%request.Data("instr",1)) 
	s kontr=$G(%request.Data("kontr",1)) ;фильтр по контрагенту
	s instrtype=$G(%request.Data("instrtype",1)) ;фильтр по типу инструкции
	
	k where,qp,order 
	
	if depot'="" s where($i(where))="IDEPOT1=?",qp($i(qp))=depot
	s kontrID=$P(kontr,"~") if kontrID'="" s where($i(where))="IKONTR=?",qp($i(qp))=kontrID
	s ITypeId=$P(instrtype,"~") if ITypeId'="" s where($i(where))="IOPER=?",qp($i(qp))=ITypeId
	if sort'="" s order($i(order),sort)=dir ;выбранный режим сортировки
	d ..wIDocs(.where,.qp,.order) ;выводим документы с выбранными параметрами
	
	&html<</tbody></table>
	</fieldset>
	<div id="debug"></div>
	<script type='text/javascript' src='js/m.js'></script>
	<script type='text/javascript'>
	var sessionid="#(%session.SessionId)#";
	var kontr='#(kontr)#';
	var instrtype='#(instrtype)#';
	var server={ /*прячем сюда все серверные вызовы*/
		changeState: function(docid,newstat){
			return #server(Operation.InstrActions.changestat(docid,newstat))#
		}
		,killTempAddress: function(){
			#server(Store.Action.KillTempAddress())#	
		}
		,createChildDoc: function(docid,cl){
			return #server(Docs.Action.CreateChildDoc(docid,cl))#	
		}
		,saveQuantFromInstr: function(InstrID){
			return #server(Store.Action.SaveQuantFromInstr(InstrID))#	
		}	
	}

   </script>
	<script type='text/javascript' src='js/csp.EmpLight3.js'></script>
	>
	s sess=%request.Get("sessionid")
	s userid=$G(%session.Data("user"))
	s newstat=%request.Get("newstat")
  	i newstat'="" d
	. s ok=##class(Operation.InstrActions).changestat(instr,newstat)
	. i '+ok d
	. . w "<script type='text/javascript'>alert('",ok,"')</script",">"

	Q ""
]]></Implementation>
</Method>
</Class>
</Export>
