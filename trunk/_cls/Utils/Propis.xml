<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="20">
<Class name="Utils.Propis">
<Description>
Сумма рублей прописью
http://www.nestor.minsk.by/kg/2002/04/kg20411.html
Возьмем число 123 345 123 345 (разбиты по триадам справа налево)
Его пропись:
сто двадцать три миллиарда триста сорок пять миллионов сто двадцать три тысячи триста сорок пять". 
Особенности:
1 - один,одна,одно, 2 - два,две
1 рубль,2 рубля,5 рублей
1 копейка,2 копейки,5 копеек
тысяча - женский род
миллион, миллиард и т.д - мужской</Description>
<TimeCreated>62354,82118.857508</TimeCreated>

<Method name="Write">
<Description>
род: 0-средний,1-мужской,2-женский
словарь целой части
in=1(мужской), in(10)="рублей", in(5)="рублей", in(2)="рубля", in(1)="рубель", in(-1)="рублей"
словарь дробной части
dn=2(женский), dn(10)="копеек", in(5)="копеек", in(2)="копейки", in(1)="копейка", dn(-1)="копеек"</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[num:%String,&in:%String="1",&dn:%String="2"]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 #define Средний 0 
 #define Мужской 1
 #define Женский 2
 s num=$j(+$g(num),0,2), int=$p(num,"."), dec=$p(num,".",2)
 
 #;заполнение словарей целой и дробной части по умолчанию
 if $d(in)<10 { ;если не определен словарь целой части
	s in=1, in(10)="рублей", in(5)="рублей", in(2)="рубля", in(1)="рубль", in(-1)="рублей"
 }
 if $d(dn)<10 { ;если не определен словарь дробной части
	s dn=2, dn(10)="копеек", dn(5)="копеек", dn(2)="копейки", dn(1)="копейка", dn(-1)="копеек"
 }
 s propis=$$is(int,.in)_" "_$$is(dec,.dn)
 s $e(propis)=$zcvt($e(propis),"U") ;Выделение заглавной буквы
 Q propis
 
is(int,names) ;разбор целого числа по триадам справа налево
 s len=$l(int),lvl=0,nnn=""
 for pos=len:-3:0 {
	s lvl=lvl+1, nnn=$e(int,pos-2,pos) Q:nnn="" 
	s nnn=$j(nnn,3,0), nnn=$tr(nnn," ","0"), nnn=$e(nnn,1,3) ;нормализация триады
	s rd=names ;запоминаем род
	s tname=$$ls(lvl,nnn,.rd) ;название уровня триады может изменить род
	s int(lvl)=$$ts(nnn,rd)_" "_tname ;собираем триаду
 }
 
 s list=$LB(""),pos=0 ;заполняем список триадами в порядке обратном разбору на триады
 s i="" for { s i=$o(int(i),-1) q:i=""
 	 s pos=pos+1, $LI(list,pos)=$g(int(i))
 }
 
 #;согласуем текст числа со словарем ресурсов, анализируя последние две цифры
 s n21=$e(int,len-1,len) 
 s:n21>20 n21=$e(n21,2) ;после 20 -  интересует значение только последней цифры
 
 #;выбираем из словаря название
 s name="", i="" for { s i=$o(names(i),-1) Q:i=""  
 	if n21>=i s name=$g(names(i)) Q
 }
 s value=$LTS(list," ") ;список в строку
 Q value_$S(value'=" ":name,1:"") ;добавляем название
 

ls(lvl,nnn,rd)  ;возвращает название триады в зависимости от позиции
	Q:lvl<2 ""  ;у первой триады нет названия
	s n21=+$e(nnn,2,3) s:n21>20 n21=$e(n21,2) 

	if lvl=2 { ;исключение 
		s rd=2 ;женский род
		Q:n21>10&&(n21<20) "тысяч"
		if n21=1 Q "тысяча"
		Q:n21>1&&(n21<5) "тысячи"
		Q "тысяч"
	}	
	
	s lvlname=$CASE(lvl,
		3:"миллион",4:"миллиард",5:"биллион",6:"биллиард",7:"триллион",8:"триллиард",9:"квадриллион",
		10:"квинтиллион",11:"секстиллион",12:"септиллион",13:"октиллион",14:"нониллион",15:"дециллион"
		,:"запредельно много"
	)
	
	s fix=""
	if n21>10&&(n21<20) {
		s fix="ов"
	} elseif n21=1 {
		s fix=""
	} elseif n21>1&&(n21<5) {
		s fix="а"
	} elseif n21>4 {
		s fix="ов"	
	}
	
	Q lvlname_fix
 
ts(nnn,род)  ;Возвращает название чисел триады: 321 - триста двадцать один 
	s nnn=$g(nnn) Q:nnn="" ""
	#;w !,"Триада: ",nnn,"; Род: ",род
	s n3=$e(nnn,1), n2=$e(nnn,2), n1=$e(nnn,3), n21=+$e(nnn,2,3)
	s сотни=$$ns(3,n3),десятки="",единицы=""
	if n21>19 {
		s десятки=$$ns(2,n2,род), единицы=$$ns(1,n1,род)
	} elseif n21>10 {
		s единицы=$$ns(4,n1,род)
	} else {
		s десятки=$$ns(2,n2,род), единицы=$$ns(1,n1,род)	
	}
	s list=""
	s:сотни'="" list=сотни
	s:десятки'="" list=list_$S(list="":"",1:" ")_десятки
	s:единицы'="" list=list_$S(list="":"",1:" ")_единицы
 Q list

ns(разряд,цифра,род=1) ;Возвращает название числа в триаде
	#;w !,"разряд: ",разряд,"; цифра: ",цифра,"; род: ",род
	#define test(%r,%c) разряд=%r&&(цифра=%c)
	#define testEx(%r,%c,%rd) разряд=%r&&(цифра=%c)&&(род=%rd)
	
	Q:$$$testEx(1,1,$$$Средний) "одно" Q:$$$testEx(1,1,$$$Мужской) "один" Q:$$$testEx(1,1,$$$Женский) "одна"  
	Q:$$$testEx(1,2,$$$Женский) "две" Q:$$$test(1,2) "два" 
	
	Q:$$$test(1,3) "три" Q:$$$test(1,4) "четыре" Q:$$$test(1,5) "пять"
	Q:$$$test(1,6) "шесть" Q:$$$test(1,7) "семь" Q:$$$test(1,8) "восемь" Q:$$$test(1,9) "девять" 
	
	Q:$$$test(2,1) "десять" Q:$$$test(2,2) "двадцать" Q:$$$test(2,3) "тридцать" Q:$$$test(2,4) "сорок" Q:$$$test(2,5) "пятьдесят"
	Q:$$$test(2,6) "шестьдесят" Q:$$$test(2,7) "семьдесят" Q:$$$test(2,8) "восемьдесят" Q:$$$test(2,9) "девяносто" 
	
	Q:$$$test(3,1) "сто" Q:$$$test(3,2) "двести" Q:$$$test(3,3) "триста" Q:$$$test(3,4) "четыреста" Q:$$$test(3,5) "пятьсот"
	Q:$$$test(3,6) "шестьсот" Q:$$$test(3,7) "семьсот" Q:$$$test(3,8) "восемьсот" Q:$$$test(3,9) "девятьсот" 
	
	Q:$$$test(4,1) "одиннадцать" Q:$$$test(4,2) "двенадцать" Q:$$$test(4,3) "тринадцать" Q:$$$test(4,4) "четырнадцать" Q:$$$test(4,5) "пятнадцать"
	Q:$$$test(4,6) "шестнадцать" Q:$$$test(4,7) "семнадцать" Q:$$$test(4,8) "восемнадцать" Q:$$$test(4,9) "девятнадцать" 
	
	Q ""
]]></Implementation>
</Method>
</Class>
</Export>
