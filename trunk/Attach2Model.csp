<script language="Cache" method="OnPreHTTP" arguments="" returntype="%Boolean">
 s login=$G(%session.Data("user"))
 i '+login s %response.ServerSideRedirect="norights.csp" 
 i '##class(Common.Rights).getrights(login,4) s %response.ServerSideRedirect="norights.csp" 
 q 1
</script>

<html XMLNS:SKLADz XMLNS:SKLADList XMLNS:SKLAD2>
<IMPORT NAMESPACE="SKLADList" IMPLEMENTATION="htc/listview2.htc">
<IMPORT NAMESPACE="SKLADz" IMPLEMENTATION="htc/treeview.htc">
<IMPORT NAMESPACE="SKLAD2" IMPLEMENTATION="htc/table.htc">
<head>
<link href="style.css" type=text/css rel=stylesheet>
<script language="jscript" src="common.js"></script>
<title>	Cache Server Page </title>
<script language="javascript">
var CurrentProperty;
var Objvalue;
var InCard=false;
var FromTable="";
var FromTree="";
var Number=0;
ExpressType2="";
var ColCode="";
//если указано "@1" то в качестве цены будет указана закупочная цена
//см. Goods.GoodsAction.fromgroup()
var ShowBuyPrices="#(%request.Get("ShowBuyPrices"))#";
var depot="#($G(%session.Data("depot")))#"
var commongroups="#($G(%session.Data("commongroups")))#"

//вывод товаров принадлежащих группе
function GroupsTreeClick2(){
var where2="Groups='"+GroupsTree2.NodeID+"'"
Goods2.loadfrommethod("Goods.GoodsAction.fromgroup",where2,fields2,0+ShowBuyPrices)
}

//заполнить дерево товарами
function LoadTree2(){
GroupsTree2.AdditionalID=Catalogues2.value;
GroupsTree2.DownLoad('Data.csp?class=Goods.Group&fields=Parent,Code,Name,ID&params="'+depot+'","'+Catalogues2.value+'"')	
}

// клик на таблице моделей
function GoodsModelClick(){
CurrentModelName.innerText = Goods2.ItemName;
Zapchasti.loadfrommethod("Reports.ShowTables.ZapchastiForModel",Goods2.ItemID);
}

function startAdding(){
	if(ReturnSpace(Goods2.ItemName)=="")
	{
		alert("Не указана модель.");
		return;
	}
	AddTovarBlock.style.display = "block";
	maintable.style.display = "none";
}

function RemoveFromModel(){
	var SelectedIDs = Zapchasti.ListViewGetItems("selected",1);
	var ok = #server(Goods.GoodsAction.SetTovarFieldForGoods(SelectedIDs))#
	if (isNaN(ok)){alert(ok)}
	else{GoodsModelClick();}
}

function CloseSelectBlock(){
maintable.style.display="block";
AddTovarBlock.style.display="none";
}

//!!!!!!!!!!!!!
//!!!!!!!!!!!!!
	//набор функций для скрытого блока, т.е. блока выбора товаров
//!!!!!!!!!!!!!
//!!!!!!!!!!!!!
function startFun(){
if(!TurnOnGoodsForDoc_checkbox.checked)
	{
	var ZapchastiId=TempGoods.ListViewGetItems("selected",1);
	}
else
	{
	var ZapchastiId=GoodsForDoc.ListViewGetItems("",1);
	}
var ModelId = Goods2.ItemID;
//alert("ModelId = " + ModelId + "\n" + "ZapchastiId = " + ZapchastiId);
	var ok = #server(Goods.GoodsAction.SetTovarFieldForGoods(ZapchastiId,ModelId))#
	if (isNaN(ok)){alert(ok)}
	else{GoodsModelClick();}
CloseSelectBlock();
}

function ReturnSelected(){
ResultArray=TempGoods.ListViewGetItems("selected");
returnValue=ResultArray;
window.close();	
}

function load(){
window.dialogWidth=screen.availWidth+"px";
//alert(screen.availWidth+"X"+screen.availHeight+"\n"+window.dialogWidth+"X"+window.dialogHeight)
//TempGoods.attachEvent("onAddColumns", addcol)
TempGoods.LoadHeaders("izdelie,Description,Composition");
Goods2.LoadHeaders("izdelie,Description,Composition");
GoodsForDoc.LoadHeaders("izdelie,Description,Composition");
Zapchasti.LoadHeaders("izdelie,Description,Composition");
//alert("depot\n"+depot+"commongroups\n"+commongroups);
//Catalogues.startDownload(strForGroups(depot,commongroups), putCatalogue);
LoadTree()
PropTable.DownLoadPairs("","");
LoadPropTree();
}

function addcol(){
TempGoods.detachEvent("onAddColumns", addcol)
fields=TempGoods.GetColumns("Goods->");
//alert("fields = "+fields)
//TempGoods.AddColumns("quant~Количество~~~@%String#@#")
}

function putCatalogue(text){
addOptions(text,"Catalogues");
LoadTree();
}

function LoadTree(){
GroupsTree.AdditionalID=Catalogues.value;
//alert('Data.csp?class=Goods.Group&fields=Parent,Code,Name,ID&params="'+depot+'","'+Catalogues.value+'"')
GroupsTree.DownLoad('Data.csp?class=Goods.Group&fields=Parent,Code,Name,ID&params="'+depot+'","'+Catalogues.value+'"')	
}

function LoadPropTree(){
Group=ReturnSpace(GroupsTree.NodeCode);
LoadPropTree2("PropsTree","",Group,Catalogues.value)
}

// добавить товар в таблицу из текущей ветки
function AddFromGroup(){
var where="Groups='"+GroupsTree.NodeID+"'"
//alert(where+"\n"+TempGoodsfields);
TempGoods.loadfrommethod("Goods.GoodsAction.fromgroup",where,TempGoodsfields)
}

// добавить товар в таблицу из всех подветок данной ветки
function AddFromWholeGroup(){
var where="Groups->Depot='"+depot+"' and Groups->Catalogue='"+Catalogues.value+"' and Groups->Code %STARTSWITH '"+GroupsTree.NodeCode+"'";
TempGoods.loadfrommethod("Goods.GoodsAction.fromgroup",where,TempGoodsfields);
}

function AddFromSelect(){
if(ThisGroupOnly.checked){var GroupCondition="Groups->Depot='"+depot+"' and Groups->Catalogue='"+Catalogues.value+"' and Groups->Code %STARTSWITH '"+GroupsTree.NodeCode+"'";}
else{var GroupCondition="";}
var where=GroupCondition+FromTable;
if(cbShowQuantity.checked){ShowQuantityVar=1;}
else{ShowQuantityVar=0;}
TempGoods.loadfrommethod("Goods.GoodsAction.fromgroup",where,TempGoodsfields,ShowQuantityVar+ShowBuyPrices)
}

function TableClick(){
	ExpressType="FromTable";
	CurrentProperty=PropTable.CurrentRowTag;
	Pname.innerText=PropTable.CurrentRowName;
	newObj=PropTable.CurrentRowElement.cloneNode(true);
	Pvalue.innerHTML="";
	Pvalue.appendChild(newObj);
}

function AddExpress(){
	tagNamez=Pvalue.firstChild.tagName;
	if(tagNamez=="DIV"){
		Objvalue=Pvalue.firstChild.Tag;
		if(Objvalue.split("@")[0]==""){Objvalue=Pvalue.firstChild.innerText+Objvalue;}
		}
	if(tagNamez=="SELECT"){Objvalue=Pvalue.firstChild.options(Objec.selectedIndex).text+"@%String";}
	return Objvalue;
}

function TakeValue(){
FrstPart=AddExpress().split("@")[0]
ScndPart=AddExpress().split("@")[1]
//if(ScndPart!="%Date")return FrstPart
if(ScndPart!="%Date")return "'"+FrstPart+"'"
else {
	dateArr=FrstPart.split("/")
	Data=dateArr[2]+"-"+dateArr[1]+"-"+dateArr[0]
	return "CAST('"+Data+"' AS DATE)"
}
}

function dork(concatenation){
if(Pname.innerText=="")return false
if(ExpressType2!=ExpressType){
	Express.innerHTML="";
	ExpressType2=ExpressType;
	}
newCaption=Pname.innerText;
newEqual=Pequal.options(Pequal.selectedIndex).text;
newValue=TakeVisibleValue();
newExpression=newCaption+newEqual+newValue;
value=TakeValue();
if(ExpressType=="FromTree"){
	//exp=(CurrentProperty+InnerSplitter+Pequal.value+InnerSplitter+value);
	if(FromTree==""){FromTreeconcatenation="";}
	else{FromTreeconcatenation=concatenation}
	Number++;
	field="t"+Number+".Gvalue"
	if((Pequal.value!="=")&(Pequal.value!="<>")){field="CAST(t"+Number+".Gvalue AS INTEGER)"}
	exp=" (t"+Number+".Param="+CurrentProperty+" and "+field+Pequal.value+value+") "
	FromTree=FromTree+FromTreeconcatenation+ exp;
	}
if(ExpressType=="FromTable"){
	if(FromTable==""){FromTableconcatenation="";}
	else{FromTableconcatenation=concatenation}
	exp=" Goods->"+CurrentProperty+Pequal.value+value+" "
	FromTable=FromTable+FromTableconcatenation + exp;
	}
if(Express.innerHTML=="")concatenation="";
if(concatenation=="AND"){concatenation="И"}
if(concatenation=="OR"){concatenation="ИЛИ"}
newString=Express.innerHTML+"<b> "+concatenation+" (</b>"+newExpression+"<b>)</b>"
Express.innerHTML=newString;
}

function TakeVisibleValue(){
	Objec=Pvalue.firstChild;
	if(Objec.tagName=="SELECT")return Objec.options(Objec.selectedIndex).text
	else{return Objec.innerText;}
}

function PropsTreeClick(){
	ExpressType="FromTree";
	CurrentProperty=PropsTree.NodeID;
	Pname.innerText=PropsTree.NodeCaption;
	newObj=CreateDiv("","dsd");
	Pvalue.innerHTML="";
	Pvalue.appendChild(newObj);
}

function DelItems(element){
document.getElementById(element).DelItems();
}

function ClearSelect(){
Express.innerText='';
FromTree="";
FromTable="";
Number=0;
}

function showdictionary(where){
TempGoods.AddOnClear=true;
TempGoods.DownLoad(where);
TempGoods.AddOnClear="false";
}

//функция нужна для совместимости с table.htc
function cellaction(oo){
}

//функция нужна для совместимости с table.htc
function getDivChange(oo){
}

//открыть карточку товара
function OpenCard(ListViewObject){
GoodsId=SelectedItemProperty(ListViewObject,'Tag');
GoodsName=SelectedItemProperty(ListViewObject,'Text');
if(GoodsId=="")return
ok=window.showModalDialog("GoodsCard.csp?GoodsId="+GoodsId+"&groupspath="+"",GoodsId+InnerSplitter+GoodsName,"center:yes;status:no;dialogHeight:600px;dialogWidth:650px;resizable:yes")
if(ok==1){ShowTovars()}
}

function GroupsTreeClick(){
	CurrentGroupName.innerText=GroupsTree.NodeCaption;
	LoadPropTree();
	AddFromGroup();
}

// показать/убрать промежуточную таблицу для выбора документов
function TurnOnGoodsForDoc(){
	if(TurnOnGoodsForDoc_checkbox.checked){
		GoodsForDoc_TR.style.display="inline";
		CopyGoodsAnotherTable_Btn.style.display="inline";
		}
	else{
		GoodsForDoc_TR.style.display="none";
		CopyGoodsAnotherTable_Btn.style.display="none";
		}
}

//Переместить
function CopyGoodsAnotherTable_Fn(){
var Strings=TempGoods.ListViewGetItems("selected").split(StringSplitter)
for(var i=0; i<Strings.length-1; i++)
	{
		var StringArray = Strings[i].split(InnerSplitter);
		GoodsForDoc.addrow(StringArray[0],StringArray)
	}
}
</script>
</head>

<body onload="load();">
<sklad:Button value="Назад" onclick="window.location.href='goods.csp'"><br>
<TABLE cellSpacing=0 width="100%" celpadding="0" >
<TR>
	<TD align=center style="BACKGROUND: rgb(233,243,255); FONT-size: 18px ; font-family: arial; COLOR: rgb(0,0,102); BORDER-BOTTOM: rgb(0,0,102) 1px solid" colspan=3><strong>Запчасти и их модели</strong></TD>
</TR>
</table>
<table border=0 width=100% id="maintable">
<tr >
<td width=30% valign=top>
	<fieldset ><legend>Группы</legend>
		Классификатор:<select id="Catalogues2" onchange="LoadTree2()">
<script language="cache" runat="server">
	w ##class(Docs.Action2).GetClassValuesOptions("","Goods.Catalogue")
</script>
		</select><br>
		<SKLADz:treeview id="GroupsTree2" width="200" height=170 ImagesPath="#(%session.Data("ImagesPath"))#" zonClick="GroupsTreeClick2();"/>
	</fieldset>
</td>
<td width=70% valign=top>
	<fieldset ><legend>Товары в выбранной группе</legend>
		<SKLADList:listview ClassName="Goods.Goods" width=100% height=300 id="Goods2" onAddColumns="fields2=Goods2.GetColumns('Goods->');" zClick="GoodsModelClick()" /><br>
  	</fieldset>
</td>
</tr>
<tr><td colspan=2>
<fieldset><legend>Запчасти принадлежащие модели <span id="CurrentModelName"></span></legend>
<SKLADList:listview width=100% height=300 id="Zapchasti" /><br>
<sklad:Button value="Добавить запчасти" onclick="startAdding();" style="width:200">
<sklad:Button value="Убрать запчасти" onclick="RemoveFromModel();" style="width:200">
</fieldset>
</td>
</table>
<!--
		Отсюда идёт блок где расположены контролы для отбора товара из группы или по параметрам
-->
<span id="AddTovarBlock" style="display:none">
<table width=100% border=0>
<tr ><td width=50% valign="top">
<fieldset><legend>Отбор из группы</legend>
Классификатор:<select id="Catalogues" onchange="LoadTree()">
<script language="cache" runat="server">
	w ##class(Docs.Action2).GetClassValuesOptions("","Goods.Catalogue")
</script>
</select><br>
  <SKLADz:treeview id="GroupsTree" width="200" height=170 ImagesPath="#(%session.Data("ImagesPath"))#" zonClick="GroupsTreeClick();" onDownloadCmpl="LoadPropTree()" />
  <br>
  <input type="button" id="SelectWholeGroup" value="выбрать всю ветку" onclick="AddFromWholeGroup()">
 </fieldset>
</td>
<td width=50% valign="top">

<fieldset><legend>Отбор по параметрам</legend>
<table><tr><td valign=top>
<SKLAD2:table id="PropTable" width=220 height=200 zonTableClick="TableClick()" DisplaySecondCol="none" />
</td>
<td valign=top>
  <SKLADz:treeview id="PropsTree" width=200 height=130 ShowImages=0 ImagesPath="#(%session.Data("ImagesPath"))#" zonClick="PropsTreeClick()" />
</td></tr>
<tr><td width=100% colspan=2 align=center>
	<span id="Pname"></span>&nbsp;&nbsp;
	<select id="Pequal" >
		<option value="=">=</option>
		<option value="<>">&#8800;</option>
		<option value="<">&lt;</option>
		<option value="<=">&lt;=</option>
		<option value=">">&gt;</option>
		<option value=">=">&gt;=</option>
	</select>&nbsp;&nbsp;
	<span id="Pvalue" style="background:#ddffff;width:150px;border:dotted 1 gray">&nbsp;&nbsp;&nbsp;</span></td>
</tr>
<tr><td colspan=2>
	<center>
	<input type="button" value="И" id="Pand" onclick="dork('AND')" style="width:50px">
	<input type="button" value="ИЛИ" id="Por" onclick="dork('OR')" style="width:50px"><sklad:LittleButton name="del" id="Clear" onclick="ClearSelect();" alt="Очистить поле 'Параметры'"></center>
<fieldset><legend>Параметры отбора</legend>
&nbsp;<span id="Express" style="font:Arial 13;color:#000033"></span>
</fieldset>
</td></tr>
<tr><td colspan=2 align="center">
		<input type="button" onclick="AddFromSelect()" value="Выбрать товары">
		<input type="checkbox" id="ThisGroupOnly" style="border:0;width:20px"> только в группе <span id="CurrentGroupName"></span>
	</td>
	</tr>
</table>
</fieldset>
</td>
</tr>
<tr><td valign="top"  colspan=2>
<fieldset id="SelectedGoods"><legend>Выбранные товары</legend>
 	<SKLADList:listview width=100% height=130 id="TempGoods"  ClassName="Goods.Goods" AddOnClear="false" zonDblClick="startFun();"  AddHeaders="true" onAddColumns="TempGoodsfields=TempGoods.GetColumns('Goods->');"/><br>
 	<!--   -->
<sklad:LittleButton name="del" id="addrtrr" onclick="TempGoods.DelItems()" alt="Убрать выделенные товары из списка">
<sklad:LittleButton name="down" id="CopyGoodsAnotherTable_Btn" onclick="CopyGoodsAnotherTable_Fn()" alt="Отобрать товары для документа" style="display:none">
<br><input type="checkbox" id="TurnOnGoodsForDoc_checkbox" onclick="TurnOnGoodsForDoc()" style="width:15;border:none" > Включить промежуточную таблицу для выбранных товаров
</fieldset>
</td></tr>
<tr id="GoodsForDoc_TR" style="display:none">
	<td colspan=2><SKLADList:listview width=100% height=130 id="GoodsForDoc"  ClassName="Goods.Goods" AddOnClear="false" zonDblClick="startFun();"  AddHeaders="true"/><br>
<sklad:LittleButton name="del" id="RemoveGoodsForDoc_Button" onclick="GoodsForDoc.DelItems()" alt="Убрать выделенные товары из списка">
</tr>
<tr><td valign=bottom  colspan=2>
<center><sklad:Button value="Добавить выбранные запчасти" onclick="startFun();" style="width:200"><sklad:Button onclick="CloseSelectBlock()" value="Отмена" style="width:300"></center>
</td></tr>
</table>
</span>
</body>
</html>
